From bee299707f784e539ec5669196d082d6a1c2b4a3 Mon Sep 17 00:00:00 2001
Message-Id: <bee299707f784e539ec5669196d082d6a1c2b4a3.1650636481.git.keller@fs-net.de>
In-Reply-To: <8876d3464f7abe86d96420dca69dd3317368c208.1650636480.git.keller@fs-net.de>
References: <8876d3464f7abe86d96420dca69dd3317368c208.1650636480.git.keller@fs-net.de>
From: Lihua Liu <lihual@codeaurora.org>
Date: Fri, 10 Apr 2020 15:17:35 +0800
Subject: [PATCH 31/56] qcacld-2.0: Fix error print of RX buffer size

Error print is encountered as host driver prepare two RX buffer
with size of 0, which set in function rx_completion_task. it
happens if RX completion thread is sheduled before Target Ready
event received. To avoid this, set a default size of RX buffer
before Target Ready event is received.

Change-Id: Ib9e0a1ea3b0af6c0291666dc6c5bac42d88d7990
CRs-fixed: 2652193
---
 CORE/SERVICES/HIF/sdio/hif_sdio_recv.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/CORE/SERVICES/HIF/sdio/hif_sdio_recv.c b/CORE/SERVICES/HIF/sdio/hif_sdio_recv.c
index 8fea298..d67b2c7 100644
--- a/CORE/SERVICES/HIF/sdio/hif_sdio_recv.c
+++ b/CORE/SERVICES/HIF/sdio/hif_sdio_recv.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2013-2014,2016-2019 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2013-2014,2016-2020 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -53,6 +53,7 @@
 #include "if_ath_sdio.h"
 
 #define NBUF_ALLOC_FAIL_WAIT_TIME 100
+#define MAX_CREDIT_SIZE 2048
 
 static void HIFDevDumpRegisters(HIF_SDIO_DEVICE *pDev,
         MBOX_IRQ_PROC_REGISTERS *pIrqProcRegs,
@@ -869,6 +870,7 @@ int rx_completion_task(void *param)
     A_UINT8 nextIsSingle = 0;
     A_UINT16 curPayloadLen = 0;
     A_STATUS status = A_OK;
+    int rx_buf_size;
 
     device = (HIF_SDIO_DEVICE *)param;
     target = (HTC_TARGET *)device->pTarget;
@@ -1015,7 +1017,9 @@ int rx_completion_task(void *param)
         //alloc skb for next bundle
         adf_os_spin_lock_irqsave(&device->pRecvTask->rx_alloc_lock);
         while(HTC_PACKET_QUEUE_DEPTH(&device->pRecvTask->rxAllocQueue) < 64) {
-            pPacket = HIFDevAllocRxBuffer(device, target->TargetCreditSize);
+            rx_buf_size = (target->TargetCreditSize == 0) ? MAX_CREDIT_SIZE:
+                                   (target->TargetCreditSize + HIF_MBOX_BLOCK_SIZE);
+            pPacket = HIFDevAllocRxBuffer(device, rx_buf_size);
             if(pPacket == NULL) {
                 AR_DEBUG_PRINTF(ATH_DEBUG_ERR, ("Short of mem, alloc failed"));
                 break;
-- 
2.14.5

