From fdf16eb4f8cab67106a83e94ae3d94aec46608da Mon Sep 17 00:00:00 2001
Message-Id: <fdf16eb4f8cab67106a83e94ae3d94aec46608da.1650636481.git.keller@fs-net.de>
In-Reply-To: <8876d3464f7abe86d96420dca69dd3317368c208.1650636480.git.keller@fs-net.de>
References: <8876d3464f7abe86d96420dca69dd3317368c208.1650636480.git.keller@fs-net.de>
From: Lihua Liu <lihual@codeaurora.org>
Date: Mon, 23 Mar 2020 18:40:20 +0800
Subject: [PATCH 18/56] qcacld-2.0: Add TX xmit to send mgmt frames in monitor
 mode

Register TX xmit function for sending management frames in
monitor mode. Expand RX mgmt filter parameter as
0x0~0xFFFFFFFF.

Change-Id: I46e418df9c8701327a1574d3797b979276b1a002
CRs-Fixed: 2642180
---
 CORE/HDD/src/wlan_hdd_tx_rx.c | 28 +++++++++++++++++-
 CORE/HDD/src/wlan_hdd_wext.c  | 66 ++++++++++++++++++++++++++++---------------
 CORE/SME/inc/sme_Api.h        |  4 +--
 3 files changed, 72 insertions(+), 26 deletions(-)

diff --git a/CORE/HDD/src/wlan_hdd_tx_rx.c b/CORE/HDD/src/wlan_hdd_tx_rx.c
index 165467e..5fa42f6 100644
--- a/CORE/HDD/src/wlan_hdd_tx_rx.c
+++ b/CORE/HDD/src/wlan_hdd_tx_rx.c
@@ -71,7 +71,7 @@
 #include "adf_trace.h"
 
 #include "wlan_hdd_nan_datapath.h"
-
+#include "wlan_qct_wda.h"
 /*---------------------------------------------------------------------------
   Preprocessor definitions and constants
   -------------------------------------------------------------------------*/
@@ -471,6 +471,8 @@ int __hdd_hard_start_xmit(struct sk_buff *skb, struct net_device *dev)
 #ifdef QCA_PKT_PROTO_TRACE
    v_U8_t proto_type = 0;
 #endif /* QCA_PKT_PROTO_TRACE */
+   v_U8_t *pMacHeader;
+   v_U8_t type;
 
 #ifdef QCA_WIFI_FTM
    if (hdd_get_conparam() == VOS_FTM_MODE) {
@@ -483,6 +485,30 @@ int __hdd_hard_start_xmit(struct sk_buff *skb, struct net_device *dev)
    }
 #endif
 
+       if (hdd_get_conparam() == VOS_MONITOR_MODE) {
+               pMacHeader = skb->data;
+               type = WLAN_HDD_GET_TYPE_FRM_FC(pMacHeader[0]);
+               if (type == SIR_MAC_MGMT_FRAME) {
+                       status = halTxFrame(NULL, skb,( tANI_U16 ) (skb->len),
+                               HAL_TXRX_FRM_802_11_MGMT,
+                               ANI_TXDIR_FROMDS,
+                               7,
+                               NULL,
+                               skb->data,
+                               0,
+                               pAdapter->sessionId);
+                       if (status) {
+                               hddLog(LOGE, FL("Failed to send TX mgmt"));
+                               while (skb) {
+                                       skb_next = skb->next;
+                                       kfree_skb(skb);
+                                       skb = skb_next;
+                               }
+                       }
+               }
+               return NETDEV_TX_OK;
+       }
+
    ++pAdapter->hdd_stats.hddTxRxStats.txXmitCalled;
 
    if(vos_is_logp_in_progress(VOS_MODULE_ID_VOSS, NULL)) {
diff --git a/CORE/HDD/src/wlan_hdd_wext.c b/CORE/HDD/src/wlan_hdd_wext.c
index 4935b35..6dad136 100644
--- a/CORE/HDD/src/wlan_hdd_wext.c
+++ b/CORE/HDD/src/wlan_hdd_wext.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2011-2019 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2011-2020 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -5705,7 +5705,8 @@ VOS_STATUS wlan_hdd_get_temperature(hdd_adapter_t *adapter_ptr,
  *
  * Return: An error code or 0 on success.
  */
-static int wlan_hdd_mnt_filter_type_cmd(hdd_adapter_t *pAdapter, v_U8_t *data,
+static int wlan_hdd_mnt_filter_type_cmd(hdd_adapter_t *pAdapter,
+                                        v_U32_t *data,
                                         int data_len)
 {
     hdd_context_t *pHddCtx = NULL;
@@ -7061,33 +7062,52 @@ static int __iw_setint_getnone(struct net_device *dev,
         }
         case WE_SET_MON_FILTER:
         {
-            v_U8_t filter_type = 0;
+            v_U32_t filter_type = (v_U32_t)set_value;
 
             if (VOS_MONITOR_MODE != hdd_get_conparam()) {
                 hddLog(LOGE, "Unable to set Monitor Mode Filters");
                 hddLog(LOGE, "WLAN Device is not in Monitor mode!!");
                 return -EINVAL;
             }
-
-            if (set_value < MON_MGMT_PKT || set_value > MON_ALL_PKT) {
-                hddLog(LOGE, "Invalid Filter value recieved...");
-                hddLog(LOGE, "Valid Values to set monitor mode filter:");
-                hddLog(LOGE, "0: Filter management packets");
-                hddLog(LOGE, "1: Filter control packets");
-                hddLog(LOGE, "2: Filter data packets");
-                hddLog(LOGE, "3: Filter All packets");
-                return -EINVAL;
-            }
-            filter_type = (v_U8_t) (set_value & 0xFF);
-
-            /* filter packetin monitor mode. */
-            if (filter_type < MON_MGMT_PKT || filter_type > MON_ALL_PKT) {
-                hddLog(LOGE, "Invalid monitor mode filter type received");
-                return -EINVAL;
-            }
-
-            hddLog(LOG1, "Monitor Mode Filter type  = %d", filter_type);
-            wlan_hdd_mnt_filter_type_cmd(pAdapter, &filter_type,sizeof(v_U8_t));
+            /*
+             *filter type usage: 0-filter, 1-not filter;
+             * Bit 0 : OFFLOAD_FRAME_TYPE_MGMT
+             * Bit 1 : OFFLOAD_FRAME_TYPE_DATA
+             * Bit 2 : OFFLOAD_FRAME_TYPE_CTRL
+             * Bit 3 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_ASSOC_REQ
+             * Bit 4 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_ASSOC_RES
+             * Bit 5 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_REASSOC_REQ
+             * Bit 6 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_REASSOC_RSP
+             * Bit 7 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_PROBE_REQ
+             * Bit 8 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_PROBE_RSP
+             * Bit 9 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_BEACON
+             * Bit 10 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_ATIM
+             * Bit 11 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_DISASSOC
+             * Bit 12 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_AUTH
+             * Bit 13 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_DEAUTH
+             * Bit 14 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_ACTION
+             * Bit 15 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_BAR
+             * Bit 16 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_BA
+             * Bit 17 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_PSPOLL
+             * Bit 18 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_RTS
+             * Bit 19 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_CTS
+             * Bit 20 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_ACK
+             * Bit 21 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_CFEND
+             * Bit 22 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_CFENDCFACK
+             * Bit 23 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_TIMING_ADVERT
+             * Bit 24 : OFFLOAD_FRAME_TYPE_MGMT_SUBTYPE_ACTION_NOACK
+             * Bit 25 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_BRPOLL
+             * Bit 26 : OFFLOAD_FRAME_TYPE_CTRL_SUBTYPE_NDPA
+             * Bit 27 : OFFLOAD_FRAME_TYPE_DATA_SUBTYPE_DATA
+             * Bit 28 : OFFLOAD_FRAME_TYPE_DATA_SUBTYPE_CF_POLL
+             * Bit 29 : OFFLOAD_FRAME_TYPE_DATA_SUBTYPE_QOS
+             * Bit 30 : OFFLOAD_FRAME_TYPE_DATA_SUBTYPE_NODATA
+             * Bit 31 : OFFLOAD_FRAME_TYPE_DATA_SUBTYPE_QOS_NULL
+             */
+            hddLog(LOG1, "Monitor Mode Filter type  = %x", filter_type);
+            wlan_hdd_mnt_filter_type_cmd(pAdapter,
+                                         &filter_type,
+                                         sizeof(v_U32_t));
             break;
         }
 #ifdef FEATURE_WLAN_TDLS
diff --git a/CORE/SME/inc/sme_Api.h b/CORE/SME/inc/sme_Api.h
index 717f8b4..42e7422 100644
--- a/CORE/SME/inc/sme_Api.h
+++ b/CORE/SME/inc/sme_Api.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012-2018 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2012-2018, 2020 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -308,7 +308,7 @@ struct sme_5g_band_pref_params {
 struct sme_mnt_filter_type_req{
     u_int32_t vdev_id;
     u_int16_t request_data_len;
-    u_int8_t* request_data;
+    u_int32_t* request_data;
 };
 
 /*-------------------------------------------------------------------------
-- 
2.14.5

