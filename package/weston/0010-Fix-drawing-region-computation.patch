From e670019f0cbef21d644f1dc4f1bc3d5a419bfd7d Mon Sep 17 00:00:00 2001
Message-Id: <e670019f0cbef21d644f1dc4f1bc3d5a419bfd7d.1476965418.git.keller@fs-net.de>
In-Reply-To: <1bbe4f4c985819c8f8ead54288ca1cc8a4b7f51f.1476965418.git.keller@fs-net.de>
References: <1bbe4f4c985819c8f8ead54288ca1cc8a4b7f51f.1476965418.git.keller@fs-net.de>
From: Hartmut Keller <keller@fs-net.de>
Date: Wed, 19 Oct 2016 19:01:45 +0200
Subject: [PATCH 10/12] Fix drawing region computation

When updating regions of the screen, the computation was wrong, especially
on the left side of the first screen and on the 2nd, 3rd screen (framebuffer).
Also reduce drawn data to the given damage region, do not draw full buffers
if not necessary.
---
 src/gal2d-renderer.c |   46 ++++++++++++----------------------------------
 1 files changed, 12 insertions(+), 34 deletions(-)

diff --git a/src/gal2d-renderer.c b/src/gal2d-renderer.c
index bf12c6e..73559e7 100644
--- a/src/gal2d-renderer.c
+++ b/src/gal2d-renderer.c
@@ -643,14 +643,8 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 	}
 
 	gcmVERIFY_OK(gcoSURF_Lock(srcSurface, &srcPhyAddr[0], gcvNULL));
-
 	gcmVERIFY_OK(gcoSURF_Unlock(srcSurface, gcvNULL));
 
-	srcRect.left = ev->geometry.x < 0.0 ? gal2d_int_from_double(fabsf(ev->geometry.x)) : 0;
-	srcRect.top = 0; /*es->geometry.y < 0.0 ? gal2d_int_from_double(fabsf(es->geometry.y)) : 0;*/
-	srcRect.right = ev->surface->width;
-	srcRect.bottom = ev->surface->height;
-
 	dstsurface = go->nNumBuffers > 1 ?
 					go->renderSurf[go->activebuffer] :
 					go->offscreenSurface;
@@ -675,7 +669,6 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 				        srcStride, 1,
 				        tiling, srcFormat, gcvSURF_0_DEGREE,
 				        srcWidth, srcHeight);
-        gcmVERIFY_OK(gco2D_SetSource(gr->gcoEngine2d, &srcRect));
          /* Setup mirror. */
         gcmONERROR(gco2D_SetBitBlitMirror(gr->gcoEngine2d, gcvFALSE, gcvFALSE));
         gcmONERROR(gco2D_SetROP(gr->gcoEngine2d, 0xCC, 0xCC));
@@ -686,14 +679,18 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 		pixman_box32_t *rect = &rects[i];
 		gctFLOAT min_x, max_x, min_y, max_y;
 
-		dstrect.left = (bb_rects[0].x1 < 0) ? rect->x1 : bb_rects[0].x1;
-		dstrect.top = (bb_rects[0].y1 < 0) ? rect->y1 : bb_rects[0].y1;
-		dstrect.right = bb_rects[0].x2;
-		dstrect.bottom = bb_rects[0].y2;
+		srcRect.left = rect->x1 - bb_rects[0].x1;
+		srcRect.top = rect->y1 - bb_rects[0].y1;
+		srcRect.right = srcRect.left + rect->x2 - rect->x1;
+		srcRect.bottom = srcRect.top + rect->y2 - rect->y1;
+		dstrect.left = rect->x1 - output->x;
+		dstrect.top = rect->y1;
+		dstrect.right = rect->x2 - output->x;
+		dstrect.bottom = rect->y2;
 
 		if(dstrect.right < 0 || dstrect.bottom < 0 || dstrect.left > (gctINT32)dstWidth || dstrect.top > (gctINT32)dstHeight)
 		{
-			break;
+			continue;					/* Can this ever happen? */
 		}
 
 		for (j = 0; j < nsurf; j++)
@@ -717,20 +714,10 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 				max_y = max(max_y, ey[m]);
 			}
 
-			clipRect.left = gal2d_int_from_double(min_x);
+			clipRect.left = gal2d_int_from_double(min_x) - output->x;
 			clipRect.top = gal2d_int_from_double(min_y);
-			clipRect.right = gal2d_int_from_double(max_x);
+			clipRect.right = gal2d_int_from_double(max_x) - output->x;
 			clipRect.bottom = gal2d_int_from_double(max_y);
-
-			if(output->x > 0)
-			{
-				dstrect.left = dstrect.left - output->x;
-				dstrect.right = dstrect.right - output->x;
-				clipRect.left = clipRect.left - output->x;
-				clipRect.right = clipRect.right - output->x;
-			}
-
-			dstrect.left = (dstrect.left < 0) ? 0 : dstrect.left;
 			
 			status = gco2D_SetClipping(gr->gcoEngine2d, &clipRect);
 			if(status < 0)
@@ -781,6 +768,7 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 			}
 			else
 			{
+				gcmVERIFY_OK(gco2D_SetSource(gr->gcoEngine2d, &srcRect));
 				gcmVERIFY_OK(gco2D_CalcStretchFactor(gr->gcoEngine2d, srcRect.right - srcRect.left,
 						dstrect.right - dstrect.left, &horFactor));
 
@@ -794,16 +782,6 @@ repaint_region(struct weston_view *ev, struct weston_output *output, struct gal2
 				}
 				else
 				{
-					dstrect.right = dstrect.right < (gctINT)dstWidth ? dstrect.right : (gctINT)dstWidth;
-					dstrect.bottom = dstrect.bottom < (gctINT)dstHeight ? dstrect.bottom : (gctINT)dstHeight;
-					srcRect.right = srcRect.right < (gctINT)dstWidth ? srcRect.right : (gctINT)dstWidth;
-					srcRect.bottom = srcRect.bottom < (gctINT)dstHeight ? srcRect.bottom : (gctINT)dstHeight;
-
-					gcmVERIFY_OK(gco2D_CalcStretchFactor(gr->gcoEngine2d, srcRect.right - srcRect.left,
-						dstrect.right - dstrect.left, &horFactor));
-
-					gcmONERROR(gco2D_CalcStretchFactor(gr->gcoEngine2d, srcRect.bottom - srcRect.top,
-							dstrect.bottom - dstrect.top, &verFactor));
 					/* Program the stretch factors. */
 					gcmVERIFY_OK(gco2D_SetStretchFactors(gr->gcoEngine2d, horFactor, verFactor));
 
-- 
1.7.4.4

