#!/bin/sh
# Start X server and matchbox window manager
#
log_file=/var/log/startx.log
tsconf_file=/var/run/tslib.conf
event_info=/etc/X11/tslib-event.conf

fbdevs=`ls /dev/fb[0-9]* 2> /dev/null`
if [ -z $fbdevs ]
then
    echo "No framebuffers found, ignoring X!"
    exit
fi

case "$1" in
    start)
	echo "Starting X and matchbox WM..."

	# Use event0 as default
	event=event0

	# Check if the event_info file exists; if yes, take the event from
	# there. This is necessary if the touch is not located on event0. It
	# is meant to be created with something like this:
	#   echo event1 >/etc/x11/tslib-event.conf
	if [ -f "$event_info" ]
	then
	    tmp=`cat "$event_info"`
	    if [ -d /sys/class/input/$tmp ]
	    then
		event=$tmp
	    fi
	fi

	# Build names
	inputdev=touch-$event
	tslibdev=/dev/input/$event
	inputdevname=`cat /sys/class/input/$event/device/name`

	# Create a config file with these settings (in /var/run)
	# This file will also be sourced for each user so that the
	# variables for TSLIB are set correctly for ts_calibrate and ts_test.
	# (see /etc/profile.d/tslib.h)
	echo "#!/bin/sh" >$tsconf_file
	echo "# Configure input for $inputdev ($inputdevname)" >>$tsconf_file
	echo "export TSLIB_TSDEVICE=$tslibdev" >>$tsconf_file
	echo "export TSLIB_CALIBFILE=/etc/pointercal-$event" >>$tsconf_file

	# Source this file to make the settings active
	. $tsconf_file

	# Show what we have done
	echo "Configure input for $inputdev ($inputdevname)"
	echo "TSLIB_TSDEVICE=$TSLIB_TSDEVICE"
	echo "TSLIB_CALIBFILE=$TSLIB_CALIBFILE"

	# Start the X-Server on VT02, redirect output and errors to log file
	XAUTHORITY=/var/run/.Xauthority /usr/bin/startx /usr/bin/matchbox-session > $log_file 2>&1 -- vt02 &
	;;

    stop)
	# Find PID of xinit process
	PS_XINIT=`ps | grep xinit`

	if [ -n "$PS_XINIT" ]
	then
	    # The PID is the first column of the ps output, kill it
	    set -- $PS_XINIT
	    PID=$1
	    kill $PID
	fi

	# Remove the config file
	if [ -f "$tsconf_file" ]
	then
	    rm -f "$tsconf_file"
	fi
	;;

    restart|reload)
	# Simply stop and start the service
	$0 stop
	$0 start
	;;

    *)
	echo $"Usage: $0 {start|stop|restart}"
	;;
esac
